#! /usr/bin/env python3


"""
COMP3311
23T1
Assignment 2
Pokemon Database

Written by: HOLLY CHEN z5359932
Written on: 7/04/2023

Pokemon Density

Find the density of pokemon in each location within a given region.
"""


import sys
import psycopg2
import helpers

### Constants
USAGE = f"Usage: {sys.argv[0]} <Region>"


### Globals
db = None
Region = None


### Command-line args
if len(sys.argv) != 2:
    print(USAGE, file=sys.stderr)
    sys.exit(1)
Region = helpers.clean(sys.argv[1])

location_qry = '''
select l.density, l.location
from location_density l 
where (l.region::text = %s)
order by l.density desc, l.location asc
'''

noencounters_qry = '''
select l.name
from locations l 
join games g on (l.appears_in = g.id)
where (g.region::text = %s)
except (
	select l.name
	from encounters e
	inner join locations l on (l.id = e.occurs_at)
	inner join games g on (l.appears_in = g.id)
	where (g.region = %s)
)
'''

def main():
	cur = db.cursor()
	cur.execute(location_qry, [Region])
	locations = cur.fetchall()
	if (locations == []):
		print(f"'{Region}' isn't a region in the Pokemon series.", file = sys.stderr)
		return
	print()
	print(f"The average density of Pokemon within each location in the '{Region}' region:")
	print()
	for location in locations:
		print(f"{location[1]}:\t{location[0]}")
	print()
	print(f"The following locations in the '{Region}' region have no wild Pokemon encounters:")
	print()
	cur.execute(noencounters_qry, [Region, Region])
	no_encounters = cur.fetchall()
	for no_encounter in sorted(no_encounters):
		print(no_encounter[0])
	print()
	
		
			
if __name__ == '__main__':
    try:
        db = psycopg2.connect(dbname="ass2")
        main()
    except psycopg2.Error as err:
        print("DB error: ", err)
    except Exception as err:
        print("Internal Error: ", err)
        raise err
    finally:
        if db is not None:
            db.close()
    sys.exit(0)
